[versions]
kotlin = "1.9.22"
kotlinx-coroutines = "1.7.3"
kotlinx-serialization = "1.6.0"
ktor = "2.3.5"
kafka = "3.3.1"
jupiter = "5.4.0"
exposed = "0.41.1"
kmongo = "4.8.0"
androidGradlePlugin = "8.3.0-alpha05"
androidComposeVersion = "1.4.0-alpha02"
grpc = "1.3.0"
protobuf = "3.22.0"
protobuf-plugin = "0.9.2"
grpc-netty = "1.55.1"
android-target = "33"
android-min = "24"
rsproto = "0.6.10"

[libraries]
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.require = "1.8.0" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.require = "1.3.5" }

litote-kmongo-async = { module = "org.litote.kmongo:kmongo-async", version.ref = "kmongo" }
litote-kmongo-coroutines = { module = "org.litote.kmongo:kmongo-coroutine", version.ref="kmongo" }

junit-kotlin = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }

h2-database = { module = "com.h2database:h2", version.require = "2.1.214" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

simple-java-mail = { module = "org.simplejavamail:simple-java-mail", version.require = "7.6.0" }

cache4k = { module = "io.github.reactivecircus.cache4k:cache4k", version.require="0.9.0" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidComposeVersion" }
compose-foundation = {  module = "androidx.compose.foundation:foundation", version.ref = "androidComposeVersion" }
compose-material3 = { module = "androidx.compose.material3:material3", version.require = "1.1.0-alpha03" }
compose-icons = { module = "androidx.compose.material:material-icons-core", version.ref = "androidComposeVersion" }
compose-extendedIcons = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidComposeVersion" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidComposeVersion" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidComposeVersion" }
compose-accompanist-systemUiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.require = "0.28.0" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.require = "0.4.0" }

grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.require="1.54.0" }
grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "grpc" }
grpc-netty = { module = "io.grpc:grpc-netty", version.ref = "grpc-netty" }
grpc-android = { module = "io.grpc:grpc-android", version.require = "1.56.1" }
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }

rsocket-client = { module = "io.rsocket.kotlin:rsocket-ktor-client", version.require = "0.15.4" }

timemates-rsproto-client = { module = "org.timemates.rsproto:client-core", version.ref = "rsproto" }
timemates-rsproto-common = { module = "org.timemates.rsproto:common-core", version.ref = "rsproto" }

# Plugin classpaths
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
vanniktech-maven-publish = { module = "com.vanniktech.maven.publish:com.vanniktech.maven.publish.gradle.plugin", version.require = "0.25.3" }

[plugins]
# Build Conventions
conventions-multiplatform = { id = "multiplatform-convention", version.require = "SNAPSHOT" }
conventions-multiplatform-library = { id = "multiplatform-library-convention", version.require = "SNAPSHOT" }
conventions-jvm = { id = "jvm-convention", version.require = "SNAPSHOT" }
conventions-jvm-library = { id = "jvm-library-convention", version.require = "SNAPSHOT" }

kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-application = { id = "com.android.library", version.ref = "androidGradlePlugin" }
google-protobuf = { id = "com.google.protobuf", version.ref = "protobuf-plugin" }
library-publish = { id = "publish-library", version.require = "SNAPSHOT" }
timemates-rsproto = { id = "org.timemates.rsproto", version.ref = "rsproto" }
