syntax = "proto3";

import "org/timemates/api/authorizations/requests/StartAuthorizationRequest.proto";
import "org/timemates/api/authorizations/requests/ConfirmAuthorizationRequest.proto";
import "org/timemates/api/authorizations/requests/GetAuthorizationsRequest.proto";
import "org/timemates/api/authorizations/options/OmitAuthorizationOption.proto";
import "org/timemates/api/authorizations/requests/CreateProfileRequest.proto";
import "org/timemates/api/authorizations/requests/RenewAuthorizationRequest.proto";
import "org/timemates/api/authorizations/types/Authorization.proto";
import "google/protobuf/empty.proto";

option java_package = "org.timemates.api.authorizations";

service AuthorizationService {
  /**
   * Starts authorization by sending corresponding email to email address.
   *
   * Has next restrictions:
   * – 3 requests per email is max.
   */
  rpc startAuthorization(StartAuthorizationRequest) returns (StartAuthorizationRequest.Result) {
    option (omit_authorization) = true;
  }

  /**
   * Confirms authorization by sending authorization verification code.
   *
   * Has next restrictions:
   * – 3 attempts per verification code.
   */
  rpc confirmAuthorization(ConfirmAuthorizationRequest) returns (ConfirmAuthorizationRequest.Response) {
    option (omit_authorization) = true;
  }

  /**
   * Renews authorization using refresh token.
   *
   * Returns: new [Authorization].
   */
  rpc renewAuthorization(RenewAuthorizationRequest) returns (RenewAuthorizationRequest.Response) {
    option (omit_authorization) = true;
  }

  /**
   * Creates a user's profile if it's a new account.
   */
  rpc createProfile(CreateProfileRequest) returns (CreateProfileRequest.Response) {
    option (omit_authorization) = true;
  }

  /**
   * Gets all active authorizations.
   */
  rpc getAuthorizations(GetAuthorizationsRequest) returns (GetAuthorizationsRequest.Response);

  /**
   * Terminates authorization by given identifier.
   *
   * Returns [Status]
   */
  rpc terminateAuthorization(google.protobuf.Empty) returns (google.protobuf.Empty);
}